package authoring.controller;
import authoring.model.PlayerData;

public class PlayerDataController implements IDataController{
	private PlayerData myPlayerData;
	
	/**
	 * Method expects a FrontEndPlayer, and will use PlayerData's setters
	 * to set its attributes from the FrontEndPlayer object. This method will
	 * also be used to update player info in general, not just create.
	 * @param player: FrontEndPlayer object generated by the front-end
	 */
	public void createPlayerData(FrontEndPlayer player){
		//TODO: Fill in once we know the FrontEndPlayer attributes
		try{
			
		}catch(Exception e){
			
		}
	}
	
	public PlayerData getPlayerData(){
		return myPlayerData;
	}
	
	/**
	 * Method from IDataController interface
	 */
	public void finalizeData() throws Exception{
		if (myPlayerData.getStartingCash() == 0){
			throw new Exception("Player's starting cash is 0 or unspecified.");
		}
		if (myPlayerData.getStartingLives() == 0){
			throw new Exception("Player's starting lives is 0 or unspecified");
		}
		if (myPlayerData.getWinStrategyName() == null){
			throw new Exception("Player has an unspecified winning strategy.");
		}
		if (myPlayerData.getLoseStrategyName() == null){
			throw new Exception("Player has an unspecified losing strategy.");
		}
	}
}
